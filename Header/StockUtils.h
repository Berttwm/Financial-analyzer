#pragma once
#include <stdio.h>
#include <string>
#include <unordered_map>
#include <vector>

/* Stock Utils
* Utility class to support Stock and Metric Classes
*/

/* SheetType 
* Used by Scorer
*/
enum class SheetType
{
	IncomeStatement,
	BalanceSheet,
	CashFlow
};

/* Income Statement Utils
*
*/
enum class IncomeStatementMetrics {
	date,
	symbol,
	reportedCurrency,
	cik,
	fillingDate,
	acceptedDate,
	calendarYear,
	period,
	revenue,
	costOfRevenue,
	grossProfit,
	grossProfitRatio,
	researchAndDevelopmentExpenses,
	generalAndAdministrativeExpenses,
	sellingAndMarketingExpenses,
	sellingGeneralAndAdministrativeExpenses,
	otherExpenses,
	operatingExpenses,
	costAndExpenses,
	interestIncome,
	interestExpense,
	depreciationAndAmortization,
	ebitda,
	ebitdaratio,
	operatingIncome,
	operatingIncomeRatio,
	totalOtherIncomeExpensesNet,
	incomeBeforeTax,
	incomeBeforeTaxRatio,
	incomeTaxExpense,
	netIncome,
	netIncomeRatio,
	eps,
	epsdiluted,
	weightedAverageShsOut,
	weightedAverageShsOutDil,
	link,
	finalLink,
};
/* Unordered_map holding the income statement metrics to a corresponding string */
const std::unordered_map<IncomeStatementMetrics, std::string> IncomeStatementMetricsStrings = {
	{IncomeStatementMetrics::date, "date"},
	{IncomeStatementMetrics::symbol, "symbol"},
	{IncomeStatementMetrics::reportedCurrency, "reportedCurrency"},
	{IncomeStatementMetrics::cik, "cik"},
	{IncomeStatementMetrics::fillingDate, "fillingDate"},
	{IncomeStatementMetrics::acceptedDate, "acceptedDate"},
	{IncomeStatementMetrics::calendarYear, "calendarYear"},
	{IncomeStatementMetrics::period, "period"},
	{IncomeStatementMetrics::revenue, "revenue"},
	{IncomeStatementMetrics::costOfRevenue, "costOfRevenue"},
	{IncomeStatementMetrics::grossProfit, "grossProfit"},
	{IncomeStatementMetrics::grossProfitRatio, "grossProfitRatio"},
	{IncomeStatementMetrics::researchAndDevelopmentExpenses, "researchAndDevelopmentExpenses"},
	{IncomeStatementMetrics::generalAndAdministrativeExpenses, "generalAndAdministrativeExpenses"},
	{IncomeStatementMetrics::sellingAndMarketingExpenses, "sellingAndMarketingExpenses"},
	{IncomeStatementMetrics::sellingGeneralAndAdministrativeExpenses, "sellingGeneralAndAdministrativeExpenses"},
	{IncomeStatementMetrics::otherExpenses, "otherExpenses"},
	{IncomeStatementMetrics::operatingExpenses, "operatingExpenses"},
	{IncomeStatementMetrics::costAndExpenses, "costAndExpenses"},
	{IncomeStatementMetrics::interestIncome, "interestIncome"},
	{IncomeStatementMetrics::interestExpense, "interestExpense"},
	{IncomeStatementMetrics::depreciationAndAmortization, "depreciationAndAmortization"},
	{IncomeStatementMetrics::ebitda, "ebitda"},
	{IncomeStatementMetrics::ebitdaratio, "ebitdaratio"},
	{IncomeStatementMetrics::operatingIncome, "operatingIncome"},
	{IncomeStatementMetrics::operatingIncomeRatio, "operatingIncomeRatio"},
	{IncomeStatementMetrics::totalOtherIncomeExpensesNet, "totalOtherIncomeExpensesNet"},
	{IncomeStatementMetrics::incomeBeforeTax, "incomeBeforeTax"},
	{IncomeStatementMetrics::incomeBeforeTaxRatio, "incomeBeforeTaxRatio"},
	{IncomeStatementMetrics::incomeTaxExpense, "incomeTaxExpense"},
	{IncomeStatementMetrics::netIncome, "netIncome"},
	{IncomeStatementMetrics::netIncomeRatio, "netIncomeRatio"},
	{IncomeStatementMetrics::eps, "eps"},
	{IncomeStatementMetrics::epsdiluted, "epsdiluted"},
	{IncomeStatementMetrics::weightedAverageShsOut, "weightedAverageShsOut"},
	{IncomeStatementMetrics::weightedAverageShsOutDil, "weightedAverageShsOutDil"},
	{IncomeStatementMetrics::link, "link"},
	{IncomeStatementMetrics::finalLink, "finalLink"},
};

/* Balance Sheet Utils
*
*/
enum class BalanceSheetMetrics {
	date,
	symbol,
	reportedCurrency,
	cik,
	fillingDate,
	acceptedDate,
	calendarYear,
	period,
	cashAndCashEquivalents,
	shortTermInvestments,
	cashAndShortTermInvestments,
	netReceivables,
	inventory,
	otherCurrentAssets,
	totalCurrentAssets,
	propertyPlantEquipmentNet,
	goodwill,
	intangibleAssets,
	goodwillAndIntangibleAssets,
	longTermInvestments,
	taxAssets,
	otherNonCurrentAssets,
	totalNonCurrentAssets,
	otherAssets,
	totalAssets,
	accountPayables,
	shortTermDebt,
	taxPayables,
	deferredRevenue,
	otherCurrentLiabilities,
	totalCurrentLiabilities,
	longTermDebt,
	deferredRevenueNonCurrent,
	deferredTaxLiabilitiesNonCurrent,
	otherNonCurrentLiabilities,
	totalNonCurrentLiabilities,
	otherLiabilities,
	capitalLeaseObligations,
	totalLiabilities,
	preferredStock,
	commonStock,
	retainedEarnings,
	accumulatedOtherComprehensiveIncomeLoss,
	othertotalStockholdersEquity,
	totalStockholdersEquity,
	totalLiabilitiesAndStockholdersEquity,
	minorityInterest,
	totalEquity,
	totalLiabilitiesAndTotalEquity,
	totalInvestments,
	totalDebt,
	netDebt,
	link,
	finalLink
};
/* Unordered_map holding the balance sheet metrics to a vector of the corresponding string */
const std::unordered_map<BalanceSheetMetrics, std::string> BalanceSheetMetricsStrings = {
	{BalanceSheetMetrics::date, "date"},
	{BalanceSheetMetrics::symbol, "symbol"},
	{BalanceSheetMetrics::reportedCurrency, "reportedCurrency"},
	{BalanceSheetMetrics::cik, "cik"},
	{BalanceSheetMetrics::fillingDate, "fillingDate"},
	{BalanceSheetMetrics::acceptedDate, "acceptedDate"},
	{BalanceSheetMetrics::calendarYear, "calendarYear"},
	{BalanceSheetMetrics::period, "period"},
	{BalanceSheetMetrics::cashAndCashEquivalents, "cashAndCashEquivalents"},
	{BalanceSheetMetrics::shortTermInvestments, "shortTermInvestments"},
	{BalanceSheetMetrics::cashAndShortTermInvestments, "cashAndShortTermInvestments"},
	{BalanceSheetMetrics::netReceivables, "netReceivables"},
	{BalanceSheetMetrics::inventory, "inventory"},
	{BalanceSheetMetrics::otherCurrentAssets, "otherCurrentAssets"},
	{BalanceSheetMetrics::totalCurrentAssets, "totalCurrentAssets"},
	{BalanceSheetMetrics::propertyPlantEquipmentNet, "propertyPlantEquipmentNet"},
	{BalanceSheetMetrics::goodwill, "goodwill"},
	{BalanceSheetMetrics::intangibleAssets, "intangibleAssets"},
	{BalanceSheetMetrics::goodwillAndIntangibleAssets, "goodwillAndIntangibleAssets"},
	{BalanceSheetMetrics::longTermInvestments, "longTermInvestments"},
	{BalanceSheetMetrics::taxAssets, "taxAssets"},
	{BalanceSheetMetrics::otherNonCurrentAssets, "otherNonCurrentAssets"},
	{BalanceSheetMetrics::totalNonCurrentAssets, "totalNonCurrentAssets"},
	{BalanceSheetMetrics::otherAssets, "otherAssets"},
	{BalanceSheetMetrics::totalAssets, "totalAssets"},
	{BalanceSheetMetrics::accountPayables, "accountPayables"},
	{BalanceSheetMetrics::shortTermDebt, "shortTermDebt"},
	{BalanceSheetMetrics::taxPayables, "taxPayables"},
	{BalanceSheetMetrics::deferredRevenue, "deferredRevenue"},
	{BalanceSheetMetrics::otherCurrentLiabilities, "otherCurrentLiabilities"},
	{BalanceSheetMetrics::totalCurrentLiabilities, "totalCurrentLiabilities"},
	{BalanceSheetMetrics::longTermDebt, "longTermDebt"},
	{BalanceSheetMetrics::deferredRevenueNonCurrent, "deferredRevenueNonCurrent"},
	{BalanceSheetMetrics::deferredTaxLiabilitiesNonCurrent, "deferredTaxLiabilitiesNonCurrent"},
	{BalanceSheetMetrics::otherNonCurrentLiabilities, "otherNonCurrentLiabilities"},
	{BalanceSheetMetrics::totalNonCurrentLiabilities, "totalNonCurrentLiabilities"},
	{BalanceSheetMetrics::otherLiabilities, "otherLiabilities"},
	{BalanceSheetMetrics::capitalLeaseObligations, "capitalLeaseObligations"},
	{BalanceSheetMetrics::totalLiabilities, "totalLiabilities"},
	{BalanceSheetMetrics::preferredStock, "preferredStock"},
	{BalanceSheetMetrics::commonStock, "commonStock"},
	{BalanceSheetMetrics::retainedEarnings, "retainedEarnings"},
	{BalanceSheetMetrics::accumulatedOtherComprehensiveIncomeLoss, "accumulatedOtherComprehensiveIncomeLoss"},
	{BalanceSheetMetrics::othertotalStockholdersEquity, "othertotalStockholdersEquity"},
	{BalanceSheetMetrics::totalStockholdersEquity, "totalStockholdersEquity"},
	{BalanceSheetMetrics::totalLiabilitiesAndStockholdersEquity, "dtotalLiabilitiesAndStockholdersEquityate"},
	{BalanceSheetMetrics::minorityInterest, "minorityInterest"},
	{BalanceSheetMetrics::totalEquity, "totalEquity"},
	{BalanceSheetMetrics::totalLiabilitiesAndTotalEquity, "totalLiabilitiesAndTotalEquity"},
	{BalanceSheetMetrics::totalInvestments, "totalInvestments"},
	{BalanceSheetMetrics::totalDebt, "totalDebt"},
	{BalanceSheetMetrics::netDebt, "netDebt"},
	{BalanceSheetMetrics::link, "link"},
	{BalanceSheetMetrics::finalLink, "finalLink"},
};

/* Cash Flow Utils
*
*/
enum class CashFlowMetrics {
	date,
	symbol,
	reportedCurrency,
	cik,
	fillingDate,
	acceptedDate,
	calendarYear,
	period,
	netIncome,
	depreciationAndAmortization,
	deferredIncomeTax,
	stockBasedCompensation,
	changeInWorkingCapital,
	accountsReceivables,
	inventory,
	accountsPayables,
	otherWorkingCapital,
	otherNonCashItems,
	netCashProvidedByOperatingActivities,
	investmentsInPropertyPlantAndEquipment,
	acquisitionsNet,
	purchasesOfInvestments,
	salesMaturitiesOfInvestments,
	otherInvestingActivites,
	netCashUsedForInvestingActivites,
	debtRepayment,
	commonStockIssued,
	commonStockRepurchased,
	dividendsPaid,
	otherFinancingActivites,
	netCashUsedProvidedByFinancingActivities,
	effectOfForexChangesOnCash,
	netChangeInCash,
	cashAtEndOfPeriod,
	cashAtBeginningOfPeriod,
	operatingCashFlow,
	capitalExpenditure,
	freeCashFlow,
	link,
	finalLink,
};

/* Unordered_map holding the cash flow metrics to a corresponding string */
const std::unordered_map<CashFlowMetrics, std::string> CashFlowMetricsStrings = {
	{CashFlowMetrics::date, "date"},
	{CashFlowMetrics::symbol, "symbol"},
	{CashFlowMetrics::reportedCurrency, "reportedCurrency"},
	{CashFlowMetrics::cik, "cik"},
	{CashFlowMetrics::fillingDate, "fillingDate"},
	{CashFlowMetrics::acceptedDate, "acceptedDate"},
	{CashFlowMetrics::calendarYear, "calendarYear"},
	{CashFlowMetrics::period, "period"},
	{CashFlowMetrics::netIncome, "netIncome"},
	{CashFlowMetrics::depreciationAndAmortization, "depreciationAndAmortization"},
	{CashFlowMetrics::deferredIncomeTax, "deferredIncomeTax"},
	{CashFlowMetrics::stockBasedCompensation, "stockBasedCompensation"},
	{CashFlowMetrics::changeInWorkingCapital, "changeInWorkingCapital"},
	{CashFlowMetrics::accountsReceivables, "accountsReceivables"},
	{CashFlowMetrics::inventory, "inventory"},
	{CashFlowMetrics::accountsPayables, "accountsPayables"},
	{CashFlowMetrics::otherWorkingCapital, "otherWorkingCapital"},
	{CashFlowMetrics::otherNonCashItems, "otherNonCashItems"},
	{CashFlowMetrics::netCashProvidedByOperatingActivities, "netCashProvidedByOperatingActivities"},
	{CashFlowMetrics::investmentsInPropertyPlantAndEquipment, "investmentsInPropertyPlantAndEquipment"},
	{CashFlowMetrics::acquisitionsNet, "acquisitionsNet"},
	{CashFlowMetrics::purchasesOfInvestments, "purchasesOfInvestments"},
	{CashFlowMetrics::salesMaturitiesOfInvestments, "salesMaturitiesOfInvestments"},
	{CashFlowMetrics::otherInvestingActivites, "otherInvestingActivites"},
	{CashFlowMetrics::netCashUsedForInvestingActivites, "netCashUsedForInvestingActivites"},
	{CashFlowMetrics::debtRepayment, "debtRepayment"},
	{CashFlowMetrics::commonStockIssued, "commonStockIssued"},
	{CashFlowMetrics::commonStockRepurchased, "commonStockRepurchased"},
	{CashFlowMetrics::dividendsPaid, "dividendsPaid"},
	{CashFlowMetrics::otherFinancingActivites, "otherFinancingActivites"},
	{CashFlowMetrics::netCashUsedProvidedByFinancingActivities, "netCashUsedProvidedByFinancingActivities"},
	{CashFlowMetrics::effectOfForexChangesOnCash, "effectOfForexChangesOnCash"},
	{CashFlowMetrics::netChangeInCash, "netChangeInCash"},
	{CashFlowMetrics::cashAtEndOfPeriod, "cashAtEndOfPeriod"},
	{CashFlowMetrics::cashAtBeginningOfPeriod, "cashAtBeginningOfPeriod"},
	{CashFlowMetrics::operatingCashFlow, "operatingCashFlow"},
	{CashFlowMetrics::capitalExpenditure, "capitalExpenditure"},
	{CashFlowMetrics::freeCashFlow, "freeCashFlow"},
	{CashFlowMetrics::link, "link"},
	{CashFlowMetrics::finalLink, "finalLink"},
};